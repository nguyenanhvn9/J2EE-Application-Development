/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package CLI;
import java.util.Scanner;
import manager.*;
import model.*;
import Order.*;

/**
 *
 * @author DatG
 */
public class Main {
    public static void main(String[] args) {
        System.setProperty("file.encoding", "UTF-8");
        InventoryManager inv = InventoryManager.getInstance();
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\n========= MENU =========");
            System.out.println("1. Th√™m s·∫£n ph·∫©m");
            System.out.println("2. Hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m");
            System.out.println("3. T·∫°o ƒë∆°n h√†ng");
            System.out.println("4. X√≥a s·∫£n ph·∫©m");
            System.out.println("5. S·ª≠a th√¥ng tin s·∫£n ph·∫©m");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");
            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    addProductCLI(inv, sc);
                    break;
                case 2:
                    inv.displayAll();
                    break;
                case 3:
                    createOrderCLI(inv, sc);
                    break;
                case 4:
                    deleteProductCLI(inv, sc);
                    break;
                case 5:
                    editProductCLI(inv, sc);
                    break;
                case 0:
                    System.out.println("üëã Tho√°t ch∆∞∆°ng tr√¨nh.");
                    return;
                default:
                    System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
            }
        }
    }

    private static void addProductCLI(InventoryManager inv, Scanner sc) {
        System.out.println("==> Nh·∫≠p lo·∫°i s·∫£n ph·∫©m:");
        System.out.println("1. ƒêi·ªán t·ª≠\n2. Qu·∫ßn √°o\n3. Th·ª±c ph·∫©m");
        int type = sc.nextInt(); sc.nextLine();

        System.out.print("ID: ");
        String id = sc.nextLine();
        System.out.print("T√™n: ");
        String name = sc.nextLine();
        System.out.print("Gi√°: ");
        double price = sc.nextDouble();
        System.out.print("S·ªë l∆∞·ª£ng t·ªìn kho: ");
        int quantity = sc.nextInt(); sc.nextLine();

        Product p = null;
        switch (type) {
            case 1:
                System.out.print("Th·ªùi gian b·∫£o h√†nh (th√°ng): ");
                int warranty = sc.nextInt();
                System.out.print("C√¥ng su·∫•t (W): ");
                int power = sc.nextInt(); sc.nextLine();
                p = new ElectronicProduct(id, name, price, quantity, warranty, power);
                break;
            case 2:
                System.out.print("Size: ");
                String size = sc.nextLine();
                System.out.print("Ch·∫•t li·ªáu: ");
                String material = sc.nextLine();
                p = new ClothingProduct(id, name, price, quantity, size, material);
                break;
            case 3:
                System.out.print("Ng√†y s·∫£n xu·∫•t: ");
                String mfg = sc.nextLine();
                System.out.print("Ng√†y h·∫øt h·∫°n: ");
                String exp = sc.nextLine();
                p = new FoodProduct(id, name, price, quantity, mfg, exp);
                break;
            default:
                System.out.println("‚ùå Lo·∫°i s·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá.");
                return;
        }

        inv.addProduct(p);
        System.out.println("‚úÖ Th√™m s·∫£n ph·∫©m th√†nh c√¥ng.");
    }

    private static void createOrderCLI(InventoryManager inv, Scanner sc) {
        Order order = new Order();
        while (true) {
            System.out.print("Nh·∫≠p ID s·∫£n ph·∫©m mu·ªën mua (ho·∫∑c 0 ƒë·ªÉ k·∫øt th√∫c): ");
            String id = sc.nextLine();
            if (id.equals("0")) break;

            Product product = inv.findById(id);
            if (product == null) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.");
                continue;
            }

            System.out.print("S·ªë l∆∞·ª£ng mu·ªën mua: ");
            int qty = sc.nextInt(); sc.nextLine();

            try {
                order.addItem(product, qty);
                System.out.println("‚úî ƒê√£ th√™m v√†o ƒë∆°n h√†ng.");
            } catch (OutOfStockException e) {
                System.out.println("‚ùå L·ªói: " + e.getMessage());
            }
        }

        System.out.println("üßæ ƒê∆°n h√†ng c·ªßa b·∫°n:");
        order.showOrder();
    }

    private static void deleteProductCLI(InventoryManager inv, Scanner sc) {
        System.out.print("Nh·∫≠p ID s·∫£n ph·∫©m mu·ªën x√≥a: ");
        String id = sc.nextLine();
        Product p = inv.findById(id);
        if (p == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.");
            return;
        }
        inv.removeProduct(id);
        System.out.println("‚úÖ ƒê√£ x√≥a s·∫£n ph·∫©m.");
    }

    private static void editProductCLI(InventoryManager inv, Scanner sc) {
        System.out.print("Nh·∫≠p ID s·∫£n ph·∫©m mu·ªën s·ª≠a: ");
        String id = sc.nextLine();
        Product p = inv.findById(id);
        if (p == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m.");
            return;
        }
        System.out.print("T√™n m·ªõi (" + p.getName() + "): ");
        String name = sc.nextLine();
        if (!name.isEmpty()) p.setName(name);

        System.out.print("Gi√° m·ªõi (" + p.getPrice() + "): ");
        String priceStr = sc.nextLine();
        if (!priceStr.isEmpty()) p.setPrice(Double.parseDouble(priceStr));

        System.out.print("S·ªë l∆∞·ª£ng m·ªõi (" + p.getQuantityInStock() + "): ");
        String qtyStr = sc.nextLine();
        if (!qtyStr.isEmpty()) p.setQuantityInStock(Integer.parseInt(qtyStr));

        // N·∫øu mu·ªën s·ª≠a th√™m thu·ªôc t√≠nh ri√™ng t·ª´ng lo·∫°i, c√≥ th·ªÉ b·ªï sung t·∫°i ƒë√¢y

        System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t s·∫£n ph·∫©m.");
    }
}
